%image watermarking using dwt-svd
clc;
close all;
%chargement de l'image
I=imread('cameramèan.tif');
figure(1); imshow(I); title('Image dans laquelle nous insérons le watermark');
% appliquer la transformation DWT BIDIMENSIONNEL a un seul niveau
[LL1,HL1,LH1,HH1]=dwt2(I,'haar');% haar considéré pour coupler les valeurs d'entrée, stocker la différence 
                                 %et passer la somme.
% avec ll1 matrice d'approximation des coeff 
% hl1 matrice coeff horizontale 
% LH1 verticale 
% hh1 diagonale 
[LL2,HL2,LH2,HH2]=dwt2(LL1,'haar');
p=size(LL2);

%appliquée SVD sur LL2
[Uy,Sy,Vy]=svd(LL2);
% SV matrice sur laquelle on va appliquer le marquage
q=size(Sy);

%definir watermark
I_w=imread('corn.tif');
I_w=I_w(:,:,1);
%CHANGER LA taille de l'image marquer 
I1_w=imresize(I_w,p);
figure(2); 
 imshow(I1_w); title(' watermark adapté a la taille de la matrice sy');
 
%Appliquée SVD sur le watermark
[Uw,Sw,Vw]=svd(double(I1_w));
%force d'enrobage
alpha=0.75;
%embedding watermark la matrice S ll2 avec
%la matrice S du tatouage X FORCE embedding 
Smark = Sy+alpha*Sw;

%Reconstruire les sous-bandes  du ll2 en utilisant SVD 
LL2_1 = Uy*Smark*Vy';

%Appliquer dwt inverse pour obtenir l'image Tatouée
LL1_1 = idwt2(LL2_1,HL2,LH2,HH2,'haar');
I_1=idwt2(LL1_1,HL1,LH1,HH1,'haar');
figure(3); imshow(uint8(I_1)); title('watermarked image');

%EXTRACTION
%on applique le dwt sur image tatoué 
[LL1_wmv,HL1_wmv,LH1_wmv,HH1_wmv]=dwt2(I_1,'haar');
%puis on applique le dwt sur la sous bande l matrice d'approximation du
%coeff 
[LL2_wmv,HL2_wmv,LH2_wmv,HH2_wmv]=dwt2(LL1_wmv,'haar');
%on applique svd sur ll2 
[Uy_wmv,Sy_wmv,Vy_wmv]=svd(LL2_wmv);
%on recupere la matrice swrec a partir du S DE l'image tatoué et le
%tatouage
Swrec=(Sy_wmv -Sy)/alpha;
%reconstruit le svd inverse pour avoir le tatouage 
WMy=Uw*Swrec*Vw';
figure(4); imshow(uint8(WMy)); title('Extracted watermark');









